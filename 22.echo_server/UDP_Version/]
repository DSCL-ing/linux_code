
#include "client.hpp"

void Usage(char* proc)
{
  // ./client serverip serverport 
  std::cout<<"Usage\n\t" <<proc<<" serverip  serverport\n"<<std::endl;
}

int main(int argc ,char* argv[])
{
  if(argc != 3)
  {
    Usage(argv[0]);
    exit(USAGE_ERR);
  }
  
  std::cout << "client run" << std::endl;
  
  //1. 创建套接字,打开网络文件
  int sock = socket(AF_INET,SOCK_DGRAM,0);
  if(sock<0)
  {
    std::cerr<<"create socket error "<<std::endl;
    exit(SOCKET_ERR);
  }
 
  //1.5 准备工作
  std::string serverip = argv[1];
  uint16_t serverport = atoi(argv[2]);
  
  //1.6明确server
  struct sockaddr_in server;
  memset(&server,0,sizeof(server)); //string.h
  server.sin_family = AF_INET;
  server.sin_addr.s_addr = inet_addr(serverip.c_str());
  server.sin_port = htons(serverport);

  //2.sendto
  std::string massage;
  std::cout<<"please Enter# ";
  std::cin>>massage;
 
  sendto(sock,massage.c_str(),massage.size(),0,(struct sockaddr*)&server,sizeof(server));

  //3.recv
  char buffer[1024];
  struct sockaddr temp;
  socklen_t len;  
  int n = recvfrom(sock,buffer,sizeof(buffer)-1,0,(struct sockaddr*)&temp,&len);
  if(n > 0)
  {
    buffer[n] = '\0';
  }
  else
  {

  }
  std::cout<<"server massage :" << buffer<<std::endl;

  
  return 0;
}
